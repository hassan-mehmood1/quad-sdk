/* This file was automatically generated by CasADi 3.7.2.
 *  It consists of: 
 *   1) content generated by CasADi runtime: not copyrighted
 *   2) template code copied from CasADi source: permissively licensed (MIT-0)
 *   3) user code: owned by the user
 *
 */
/* How to prefix internal symbols */
#ifdef CASADI_CODEGEN_PREFIX
  #define CASADI_NAMESPACE_CONCAT(NS, ID) _CASADI_NAMESPACE_CONCAT(NS, ID)
  #define _CASADI_NAMESPACE_CONCAT(NS, ID) NS ## ID
  #define CASADI_PREFIX(ID) CASADI_NAMESPACE_CONCAT(CODEGEN_PREFIX, ID)
#else
  #define CASADI_PREFIX(ID) eval_g_jamal_ ## ID
#endif

#include <math.h>

#ifndef casadi_real
#define casadi_real double
#endif

#ifndef casadi_int
#define casadi_int long long int
#endif

/* Add prefix to internal symbols */
#define casadi_f0 CASADI_PREFIX(f0)
#define casadi_s0 CASADI_PREFIX(s0)
#define casadi_s1 CASADI_PREFIX(s1)
#define casadi_s2 CASADI_PREFIX(s2)
#define casadi_sq CASADI_PREFIX(sq)

/* Symbol visibility in DLLs */
#ifndef CASADI_SYMBOL_EXPORT
  #if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
    #if defined(STATIC_LINKED)
      #define CASADI_SYMBOL_EXPORT
    #else
      #define CASADI_SYMBOL_EXPORT __declspec(dllexport)
    #endif
  #elif defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
    #define CASADI_SYMBOL_EXPORT __attribute__ ((visibility ("default")))
  #else
    #define CASADI_SYMBOL_EXPORT
  #endif
#endif

casadi_real casadi_sq(casadi_real x) { return x*x;}

static const casadi_int casadi_s0[3] = {36, 1, 1};
static const casadi_int casadi_s1[3] = {14, 1, 1};
static const casadi_int casadi_s2[3] = {28, 1, 1};

/* eval_g_jamal:(w[36],p[14])->(g[28]) */
static int casadi_f0(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_real a00, a01, a02, a03, a04, a05, a06, a07, a08, a09, a10, a11;
  casadi_real a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23;
  casadi_real a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35;
  casadi_real a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46, a47;
  casadi_real a48, a49, a50, a51;
  a00=arg[0]? arg[0][24] : 0;
  a01=arg[0]? arg[0][0] : 0;
  a00=(a00-a01);
  a01=arg[1]? arg[1][0] : 0;
  a02=arg[0]? arg[0][30] : 0;
  a03=(a01*a02);
  a00=(a00-a03);
  if (res[0]!=0) res[0][0]=a00;
  a00=arg[0]? arg[0][25] : 0;
  a03=arg[0]? arg[0][1] : 0;
  a00=(a00-a03);
  a03=arg[0]? arg[0][31] : 0;
  a04=(a01*a03);
  a00=(a00-a04);
  if (res[0]!=0) res[0][1]=a00;
  a00=arg[0]? arg[0][26] : 0;
  a04=arg[0]? arg[0][2] : 0;
  a00=(a00-a04);
  a04=arg[0]? arg[0][32] : 0;
  a05=(a01*a04);
  a00=(a00-a05);
  if (res[0]!=0) res[0][2]=a00;
  a00=arg[0]? arg[0][27] : 0;
  a05=arg[0]? arg[0][3] : 0;
  a05=(a00-a05);
  a06=arg[0]? arg[0][33] : 0;
  a07=arg[0]? arg[0][28] : 0;
  a08=cos(a07);
  a09=(a06*a08);
  a10=arg[0]? arg[0][35] : 0;
  a11=cos(a00);
  a12=(a10*a11);
  a13=sin(a07);
  a12=(a12*a13);
  a09=(a09+a12);
  a12=arg[0]? arg[0][34] : 0;
  a00=sin(a00);
  a14=(a12*a00);
  a14=(a14*a13);
  a09=(a09+a14);
  a09=(a09/a08);
  a09=(a01*a09);
  a05=(a05-a09);
  if (res[0]!=0) res[0][3]=a05;
  a05=arg[0]? arg[0][4] : 0;
  a07=(a07-a05);
  a05=(a12*a11);
  a09=(a10*a00);
  a05=(a05-a09);
  a05=(a01*a05);
  a07=(a07-a05);
  if (res[0]!=0) res[0][4]=a07;
  a07=arg[0]? arg[0][29] : 0;
  a05=arg[0]? arg[0][5] : 0;
  a05=(a07-a05);
  a09=(a10*a11);
  a14=(a12*a00);
  a09=(a09+a14);
  a09=(a09/a08);
  a09=(a01*a09);
  a05=(a05-a09);
  if (res[0]!=0) res[0][5]=a05;
  a05=2.3495999999999999e+01;
  a09=arg[0]? arg[0][6] : 0;
  a02=(a02-a09);
  a02=(a05*a02);
  a09=arg[0]? arg[0][12] : 0;
  a14=arg[0]? arg[0][15] : 0;
  a15=(a09+a14);
  a16=arg[0]? arg[0][18] : 0;
  a15=(a15+a16);
  a17=arg[0]? arg[0][21] : 0;
  a15=(a15+a17);
  a15=(a01*a15);
  a02=(a02-a15);
  if (res[0]!=0) res[0][6]=a02;
  a02=arg[0]? arg[0][7] : 0;
  a03=(a03-a02);
  a03=(a05*a03);
  a02=arg[0]? arg[0][13] : 0;
  a15=arg[0]? arg[0][16] : 0;
  a18=(a02+a15);
  a19=arg[0]? arg[0][19] : 0;
  a18=(a18+a19);
  a20=arg[0]? arg[0][22] : 0;
  a18=(a18+a20);
  a18=(a01*a18);
  a03=(a03-a18);
  if (res[0]!=0) res[0][7]=a03;
  a03=arg[0]? arg[0][8] : 0;
  a04=(a04-a03);
  a05=(a05*a04);
  a04=2.3049575999999999e+02;
  a03=arg[0]? arg[0][14] : 0;
  a18=arg[0]? arg[0][17] : 0;
  a21=(a03+a18);
  a22=arg[0]? arg[0][20] : 0;
  a21=(a21+a22);
  a23=arg[0]? arg[0][23] : 0;
  a21=(a21+a23);
  a04=(a04-a21);
  a04=(a01*a04);
  a05=(a05+a04);
  if (res[0]!=0) res[0][8]=a05;
  a05=1.2281431176632859e-01;
  a04=arg[0]? arg[0][9] : 0;
  a04=(a06-a04);
  a05=(a05*a04);
  a21=-9.6395688784272451e-06;
  a24=arg[0]? arg[0][10] : 0;
  a24=(a12-a24);
  a25=(a21*a24);
  a05=(a05+a25);
  a25=3.8475665512285668e-05;
  a26=arg[0]? arg[0][11] : 0;
  a26=(a10-a26);
  a27=(a25*a26);
  a05=(a05+a27);
  a27=(a25*a06);
  a28=5.4919406861435690e-06;
  a29=(a28*a12);
  a27=(a27-a29);
  a29=8.0024339924728138e-01;
  a30=(a29*a10);
  a27=(a27+a30);
  a27=(a12*a27);
  a30=9.6395688784272451e-06;
  a31=(a30*a06);
  a32=6.9916434210253009e-01;
  a33=(a32*a12);
  a31=(a31-a33);
  a33=(a28*a10);
  a31=(a31+a33);
  a31=(a10*a31);
  a27=(a27+a31);
  a31=arg[1]? arg[1][2] : 0;
  a33=(a31*a13);
  a34=arg[1]? arg[1][4] : 0;
  a35=(a34*a08);
  a36=cos(a07);
  a35=(a35*a36);
  a33=(a33+a35);
  a33=(a33*a02);
  a35=arg[1]? arg[1][3] : 0;
  a37=(a35*a13);
  a38=(a34*a08);
  a07=sin(a07);
  a38=(a38*a07);
  a37=(a37+a38);
  a37=(a37*a09);
  a33=(a33-a37);
  a37=(a35*a36);
  a38=(a31*a07);
  a37=(a37-a38);
  a37=(a08*a37);
  a37=(a37*a03);
  a33=(a33-a37);
  a37=arg[1]? arg[1][6] : 0;
  a38=(a37*a13);
  a39=arg[1]? arg[1][7] : 0;
  a40=(a39*a08);
  a40=(a40*a07);
  a38=(a38+a40);
  a38=(a38*a14);
  a33=(a33-a38);
  a38=arg[1]? arg[1][5] : 0;
  a40=(a38*a13);
  a41=(a39*a08);
  a41=(a41*a36);
  a40=(a40+a41);
  a40=(a40*a15);
  a33=(a33+a40);
  a40=(a37*a36);
  a41=(a38*a07);
  a40=(a40-a41);
  a40=(a08*a40);
  a40=(a40*a18);
  a33=(a33-a40);
  a40=arg[1]? arg[1][9] : 0;
  a41=(a40*a13);
  a42=arg[1]? arg[1][10] : 0;
  a43=(a42*a08);
  a43=(a43*a07);
  a41=(a41+a43);
  a41=(a41*a16);
  a33=(a33-a41);
  a41=arg[1]? arg[1][8] : 0;
  a43=(a41*a13);
  a44=(a42*a08);
  a44=(a44*a36);
  a43=(a43+a44);
  a43=(a43*a19);
  a33=(a33+a43);
  a43=(a40*a36);
  a44=(a41*a07);
  a43=(a43-a44);
  a43=(a08*a43);
  a43=(a43*a22);
  a33=(a33-a43);
  a43=arg[1]? arg[1][12] : 0;
  a44=(a43*a13);
  a45=arg[1]? arg[1][13] : 0;
  a46=(a45*a08);
  a46=(a46*a07);
  a44=(a44+a46);
  a44=(a44*a17);
  a33=(a33-a44);
  a44=arg[1]? arg[1][11] : 0;
  a46=(a44*a13);
  a47=(a45*a08);
  a47=(a47*a36);
  a46=(a46+a47);
  a46=(a46*a20);
  a33=(a33+a46);
  a46=(a43*a36);
  a47=(a44*a07);
  a46=(a46-a47);
  a46=(a08*a46);
  a46=(a46*a23);
  a33=(a33-a46);
  a27=(a27-a33);
  a27=(a01*a27);
  a05=(a05+a27);
  if (res[0]!=0) res[0][9]=a05;
  a21=(a21*a11);
  a05=(a25*a00);
  a21=(a21-a05);
  a21=(a21*a04);
  a05=(a32*a11);
  a27=(a28*a00);
  a05=(a05+a27);
  a05=(a05*a24);
  a21=(a21+a05);
  a05=-5.4919406861435690e-06;
  a05=(a05*a11);
  a27=(a29*a00);
  a05=(a05-a27);
  a05=(a05*a26);
  a21=(a21+a05);
  a05=-3.8475665512285668e-05;
  a27=casadi_sq(a06);
  a33=(a11*a27);
  a33=(a05*a33);
  a46=casadi_sq(a10);
  a47=(a11*a46);
  a47=(a25*a47);
  a33=(a33+a47);
  a47=(a00*a27);
  a47=(a30*a47);
  a33=(a33+a47);
  a47=casadi_sq(a12);
  a48=(a00*a47);
  a48=(a30*a48);
  a33=(a33-a48);
  a48=(a06*a12);
  a48=(a48*a11);
  a48=(a28*a48);
  a49=6.7742908748095276e-01;
  a50=(a06*a10);
  a50=(a50*a11);
  a50=(a49*a50);
  a48=(a48-a50);
  a50=(a12*a10);
  a50=(a50*a11);
  a50=(a30*a50);
  a48=(a48-a50);
  a50=5.7635003033620147e-01;
  a51=(a06*a12);
  a51=(a51*a00);
  a51=(a50*a51);
  a48=(a48-a51);
  a33=(a33+a48);
  a48=(a06*a10);
  a48=(a48*a00);
  a48=(a28*a48);
  a51=(a12*a10);
  a51=(a51*a00);
  a51=(a25*a51);
  a48=(a48+a51);
  a33=(a33+a48);
  a48=(a31*a36);
  a51=(a35*a07);
  a48=(a48+a51);
  a48=(a48*a03);
  a51=(a34*a36);
  a51=(a51*a09);
  a34=(a34*a07);
  a34=(a34*a02);
  a51=(a51+a34);
  a48=(a48-a51);
  a51=(a39*a36);
  a51=(a51*a14);
  a48=(a48-a51);
  a39=(a39*a07);
  a39=(a39*a15);
  a48=(a48-a39);
  a39=(a38*a36);
  a51=(a37*a07);
  a39=(a39+a51);
  a39=(a39*a18);
  a48=(a48+a39);
  a39=(a42*a36);
  a39=(a39*a16);
  a48=(a48-a39);
  a42=(a42*a07);
  a42=(a42*a19);
  a48=(a48-a42);
  a42=(a41*a36);
  a39=(a40*a07);
  a42=(a42+a39);
  a42=(a42*a22);
  a48=(a48+a42);
  a42=(a45*a36);
  a42=(a42*a17);
  a48=(a48-a42);
  a45=(a45*a07);
  a45=(a45*a20);
  a48=(a48-a45);
  a36=(a44*a36);
  a07=(a43*a07);
  a36=(a36+a07);
  a36=(a36*a23);
  a48=(a48+a36);
  a33=(a33-a48);
  a33=(a01*a33);
  a21=(a21+a33);
  if (res[0]!=0) res[0][10]=a21;
  a21=-1.2281431176632859e-01;
  a21=(a21*a13);
  a33=(a11*a08);
  a33=(a25*a33);
  a21=(a21+a33);
  a33=(a08*a00);
  a33=(a30*a33);
  a21=(a21-a33);
  a21=(a21*a04);
  a04=(a30*a13);
  a33=(a11*a08);
  a33=(a28*a33);
  a04=(a04-a33);
  a33=(a08*a00);
  a32=(a32*a33);
  a04=(a04+a32);
  a04=(a04*a24);
  a21=(a21+a04);
  a05=(a05*a13);
  a04=(a11*a08);
  a29=(a29*a04);
  a05=(a05+a29);
  a29=(a08*a00);
  a29=(a28*a29);
  a05=(a05-a29);
  a05=(a05*a26);
  a21=(a21+a05);
  a05=(a13*a47);
  a05=(a28*a05);
  a26=(a13*a46);
  a26=(a28*a26);
  a05=(a05-a26);
  a26=(a06*a12);
  a26=(a26*a13);
  a26=(a25*a26);
  a05=(a05-a26);
  a26=(a06*a10);
  a26=(a26*a13);
  a26=(a30*a26);
  a05=(a05-a26);
  a26=-1.0107905714475129e-01;
  a29=(a12*a10);
  a29=(a29*a13);
  a26=(a26*a29);
  a29=(a11*a08);
  a29=(a29*a27);
  a29=(a30*a29);
  a26=(a26-a29);
  a29=(a11*a08);
  a29=(a29*a47);
  a29=(a30*a29);
  a26=(a26+a29);
  a29=(a08*a00);
  a29=(a29*a27);
  a29=(a25*a29);
  a26=(a26-a29);
  a05=(a05+a26);
  a26=(a08*a00);
  a26=(a26*a46);
  a26=(a25*a26);
  a46=(a06*a12);
  a46=(a46*a11);
  a46=(a46*a08);
  a50=(a50*a46);
  a26=(a26+a50);
  a50=(a06*a10);
  a50=(a50*a11);
  a50=(a50*a08);
  a50=(a28*a50);
  a26=(a26-a50);
  a50=(a12*a10);
  a50=(a50*a11);
  a50=(a50*a08);
  a25=(a25*a50);
  a26=(a26-a25);
  a05=(a05+a26);
  a26=(a06*a12);
  a26=(a26*a08);
  a26=(a26*a00);
  a28=(a28*a26);
  a06=(a06*a10);
  a06=(a06*a08);
  a06=(a06*a00);
  a49=(a49*a06);
  a28=(a28-a49);
  a12=(a12*a10);
  a12=(a12*a08);
  a12=(a12*a00);
  a30=(a30*a12);
  a28=(a28-a30);
  a05=(a05+a28);
  a35=(a35*a09);
  a31=(a31*a02);
  a35=(a35-a31);
  a37=(a37*a14);
  a35=(a35+a37);
  a38=(a38*a15);
  a35=(a35-a38);
  a40=(a40*a16);
  a35=(a35+a40);
  a41=(a41*a19);
  a35=(a35-a41);
  a43=(a43*a17);
  a35=(a35+a43);
  a44=(a44*a20);
  a35=(a35-a44);
  a05=(a05-a35);
  a01=(a01*a05);
  a21=(a21+a01);
  if (res[0]!=0) res[0][11]=a21;
  a21=arg[1]? arg[1][1] : 0;
  a01=(a21*a03);
  a01=(a09-a01);
  if (res[0]!=0) res[0][12]=a01;
  a01=(a21*a03);
  a09=(a09+a01);
  a09=(-a09);
  if (res[0]!=0) res[0][13]=a09;
  a09=(a21*a03);
  a09=(a02-a09);
  if (res[0]!=0) res[0][14]=a09;
  a03=(a21*a03);
  a02=(a02+a03);
  a02=(-a02);
  if (res[0]!=0) res[0][15]=a02;
  a02=(a21*a18);
  a02=(a14-a02);
  if (res[0]!=0) res[0][16]=a02;
  a02=(a21*a18);
  a14=(a14+a02);
  a14=(-a14);
  if (res[0]!=0) res[0][17]=a14;
  a14=(a21*a18);
  a14=(a15-a14);
  if (res[0]!=0) res[0][18]=a14;
  a18=(a21*a18);
  a15=(a15+a18);
  a15=(-a15);
  if (res[0]!=0) res[0][19]=a15;
  a15=(a21*a22);
  a15=(a16-a15);
  if (res[0]!=0) res[0][20]=a15;
  a15=(a21*a22);
  a16=(a16+a15);
  a16=(-a16);
  if (res[0]!=0) res[0][21]=a16;
  a16=(a21*a22);
  a16=(a19-a16);
  if (res[0]!=0) res[0][22]=a16;
  a22=(a21*a22);
  a19=(a19+a22);
  a19=(-a19);
  if (res[0]!=0) res[0][23]=a19;
  a19=(a21*a23);
  a19=(a17-a19);
  if (res[0]!=0) res[0][24]=a19;
  a19=(a21*a23);
  a17=(a17+a19);
  a17=(-a17);
  if (res[0]!=0) res[0][25]=a17;
  a17=(a21*a23);
  a17=(a20-a17);
  if (res[0]!=0) res[0][26]=a17;
  a21=(a21*a23);
  a20=(a20+a21);
  a20=(-a20);
  if (res[0]!=0) res[0][27]=a20;
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int eval_g_jamal(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem){
  return casadi_f0(arg, res, iw, w, mem);
}

extern "C" CASADI_SYMBOL_EXPORT int eval_g_jamal_alloc_mem(void) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int eval_g_jamal_init_mem(int mem) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT void eval_g_jamal_free_mem(int mem) {
}

extern "C" CASADI_SYMBOL_EXPORT int eval_g_jamal_checkout(void) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT void eval_g_jamal_release(int mem) {
}

extern "C" CASADI_SYMBOL_EXPORT void eval_g_jamal_incref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT void eval_g_jamal_decref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT casadi_int eval_g_jamal_n_in(void) { return 2;}

extern "C" CASADI_SYMBOL_EXPORT casadi_int eval_g_jamal_n_out(void) { return 1;}

extern "C" CASADI_SYMBOL_EXPORT casadi_real eval_g_jamal_default_in(casadi_int i) {
  switch (i) {
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const char* eval_g_jamal_name_in(casadi_int i) {
  switch (i) {
    case 0: return "w";
    case 1: return "p";
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const char* eval_g_jamal_name_out(casadi_int i) {
  switch (i) {
    case 0: return "g";
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* eval_g_jamal_sparsity_in(casadi_int i) {
  switch (i) {
    case 0: return casadi_s0;
    case 1: return casadi_s1;
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* eval_g_jamal_sparsity_out(casadi_int i) {
  switch (i) {
    case 0: return casadi_s2;
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT int eval_g_jamal_work(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w) {
  if (sz_arg) *sz_arg = 2;
  if (sz_res) *sz_res = 1;
  if (sz_iw) *sz_iw = 0;
  if (sz_w) *sz_w = 0;
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int eval_g_jamal_work_bytes(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w) {
  if (sz_arg) *sz_arg = 2*sizeof(const casadi_real*);
  if (sz_res) *sz_res = 1*sizeof(casadi_real*);
  if (sz_iw) *sz_iw = 0*sizeof(casadi_int);
  if (sz_w) *sz_w = 0*sizeof(casadi_real);
  return 0;
}


