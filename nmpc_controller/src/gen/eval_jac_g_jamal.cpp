/* This file was automatically generated by CasADi 3.7.2.
 *  It consists of: 
 *   1) content generated by CasADi runtime: not copyrighted
 *   2) template code copied from CasADi source: permissively licensed (MIT-0)
 *   3) user code: owned by the user
 *
 */
/* How to prefix internal symbols */
#ifdef CASADI_CODEGEN_PREFIX
  #define CASADI_NAMESPACE_CONCAT(NS, ID) _CASADI_NAMESPACE_CONCAT(NS, ID)
  #define _CASADI_NAMESPACE_CONCAT(NS, ID) NS ## ID
  #define CASADI_PREFIX(ID) CASADI_NAMESPACE_CONCAT(CODEGEN_PREFIX, ID)
#else
  #define CASADI_PREFIX(ID) eval_jac_g_jamal_ ## ID
#endif

#include <math.h>

#ifndef casadi_real
#define casadi_real double
#endif

#ifndef casadi_int
#define casadi_int long long int
#endif

/* Add prefix to internal symbols */
#define casadi_f0 CASADI_PREFIX(f0)
#define casadi_s0 CASADI_PREFIX(s0)
#define casadi_s1 CASADI_PREFIX(s1)
#define casadi_s2 CASADI_PREFIX(s2)
#define casadi_sq CASADI_PREFIX(sq)

/* Symbol visibility in DLLs */
#ifndef CASADI_SYMBOL_EXPORT
  #if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
    #if defined(STATIC_LINKED)
      #define CASADI_SYMBOL_EXPORT
    #else
      #define CASADI_SYMBOL_EXPORT __declspec(dllexport)
    #endif
  #elif defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
    #define CASADI_SYMBOL_EXPORT __attribute__ ((visibility ("default")))
  #else
    #define CASADI_SYMBOL_EXPORT
  #endif
#endif

casadi_real casadi_sq(casadi_real x) { return x*x;}

static const casadi_int casadi_s0[3] = {36, 1, 1};
static const casadi_int casadi_s1[3] = {14, 1, 1};
static const casadi_int casadi_s2[171] = 
  {28, 36, 0, 1, 2, 3, 4, 5,
  6, 7, 8, 9, 12, 15, 18, 24,
  30, 37, 43, 49, 56, 62, 68, 75,
  81, 87, 94, 95, 96, 97, 102, 107,
  110, 112, 114, 116, 120, 126, 132, 0,
  1, 2, 3, 4, 5, 6, 7, 8,
  9, 10, 11, 9, 10, 11, 9, 10,
  11, 6, 9, 10, 11, 12, 13, 7,
  9, 10, 11, 14, 15, 8, 9, 10,
  12, 13, 14, 15, 6, 9, 10, 11,
  16, 17, 7, 9, 10, 11, 18, 19,
  8, 9, 10, 16, 17, 18, 19, 6,
  9, 10, 11, 20, 21, 7, 9, 10,
  11, 22, 23, 8, 9, 10, 20, 21,
  22, 23, 6, 9, 10, 11, 24, 25,
  7, 9, 10, 11, 26, 27, 8, 9,
  10, 24, 25, 26, 27, 0, 1, 2,
  3, 4, 5, 10, 11, 3, 4, 5,
  9, 11, 5, 9, 10, 0, 6, 1,
  7, 2, 8, 3, 9, 10, 11, 3,
  4, 5, 9, 10, 11, 3, 4, 5,
  9, 10, 11};

/* eval_jac_g_jamal:(w[36],p[14])->(jac_g[28x36,132nz]) */
static int casadi_f0(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_real a000, a001, a002, a003, a004, a005, a006, a007, a008, a009, a010, a011;
  casadi_real a012, a013, a014, a015, a016, a017, a018, a019, a020, a021, a022, a023;
  casadi_real a024, a025, a026, a027, a028, a029, a030, a031, a032, a033, a034, a035;
  casadi_real a036, a037, a038, a039, a040, a041, a042, a043, a044, a045, a046, a047;
  casadi_real a048, a049, a050, a051, a052, a053, a054, a055, a056, a057, a058, a059;
  casadi_real a060, a061, a062, a063, a064, a065, a066, a067, a068, a069, a070, a071;
  casadi_real a072, a073, a074, a075, a076, a077, a078, a079, a080, a081, a082, a083;
  casadi_real a084, a085, a086, a087, a088, a089, a090, a091, a092, a093, a094, a095;
  casadi_real a096, a097, a098, a099, a100, a101, a102, a103, a104, a105, a106, a107;
  casadi_real a108, a109, a110, a111, a112, a113, a114, a115, a116, a117, a118, a119;
  casadi_real a120, a121;
  a000=-1.;
  if (res[0]!=0) res[0][0]=a000;
  if (res[0]!=0) res[0][1]=a000;
  if (res[0]!=0) res[0][2]=a000;
  if (res[0]!=0) res[0][3]=a000;
  if (res[0]!=0) res[0][4]=a000;
  if (res[0]!=0) res[0][5]=a000;
  a001=-2.3495999999999999e+01;
  if (res[0]!=0) res[0][6]=a001;
  if (res[0]!=0) res[0][7]=a001;
  if (res[0]!=0) res[0][8]=a001;
  a001=-1.2281431176632859e-01;
  if (res[0]!=0) res[0][9]=a001;
  a002=-9.6395688784272451e-06;
  a003=arg[0]? arg[0][27] : 0;
  a004=cos(a003);
  a005=(a002*a004);
  a006=3.8475665512285668e-05;
  a007=sin(a003);
  a008=(a006*a007);
  a005=(a005-a008);
  a008=(-a005);
  if (res[0]!=0) res[0][10]=a008;
  a008=arg[0]? arg[0][28] : 0;
  a009=sin(a008);
  a010=(a001*a009);
  a011=cos(a008);
  a012=(a004*a011);
  a012=(a006*a012);
  a010=(a010+a012);
  a012=9.6395688784272451e-06;
  a013=(a011*a007);
  a013=(a012*a013);
  a010=(a010-a013);
  a013=(-a010);
  if (res[0]!=0) res[0][11]=a013;
  if (res[0]!=0) res[0][12]=a012;
  a013=6.9916434210253009e-01;
  a014=(a013*a004);
  a015=5.4919406861435690e-06;
  a016=(a015*a007);
  a014=(a014+a016);
  a016=(-a014);
  if (res[0]!=0) res[0][13]=a016;
  a016=(a012*a009);
  a017=(a004*a011);
  a017=(a015*a017);
  a016=(a016-a017);
  a017=(a011*a007);
  a017=(a013*a017);
  a016=(a016+a017);
  a017=(-a016);
  if (res[0]!=0) res[0][14]=a017;
  a017=-3.8475665512285668e-05;
  if (res[0]!=0) res[0][15]=a017;
  a018=-5.4919406861435690e-06;
  a019=(a018*a004);
  a020=8.0024339924728138e-01;
  a021=(a020*a007);
  a019=(a019-a021);
  a021=(-a019);
  if (res[0]!=0) res[0][16]=a021;
  a021=(a017*a009);
  a022=(a004*a011);
  a022=(a020*a022);
  a021=(a021+a022);
  a022=(a011*a007);
  a022=(a015*a022);
  a021=(a021-a022);
  a022=(-a021);
  if (res[0]!=0) res[0][17]=a022;
  a022=arg[1]? arg[1][0] : 0;
  a023=(-a022);
  if (res[0]!=0) res[0][18]=a023;
  a024=arg[1]? arg[1][3] : 0;
  a025=(a024*a009);
  a026=arg[1]? arg[1][4] : 0;
  a027=(a026*a011);
  a028=arg[0]? arg[0][29] : 0;
  a029=sin(a028);
  a030=(a027*a029);
  a025=(a025+a030);
  a025=(a025*a022);
  if (res[0]!=0) res[0][19]=a025;
  a025=cos(a028);
  a030=(a026*a025);
  a030=(a030*a022);
  if (res[0]!=0) res[0][20]=a030;
  a030=(a024*a022);
  a030=(-a030);
  if (res[0]!=0) res[0][21]=a030;
  a030=1.;
  if (res[0]!=0) res[0][22]=a030;
  if (res[0]!=0) res[0][23]=a000;
  a031=(-a022);
  if (res[0]!=0) res[0][24]=a031;
  a032=arg[1]? arg[1][2] : 0;
  a033=(a032*a009);
  a034=(a026*a011);
  a035=(a034*a025);
  a033=(a033+a035);
  a033=(a033*a022);
  a033=(-a033);
  if (res[0]!=0) res[0][25]=a033;
  a033=(a026*a029);
  a033=(a033*a022);
  if (res[0]!=0) res[0][26]=a033;
  a033=(a032*a022);
  if (res[0]!=0) res[0][27]=a033;
  if (res[0]!=0) res[0][28]=a030;
  if (res[0]!=0) res[0][29]=a000;
  a033=(-a022);
  if (res[0]!=0) res[0][30]=a033;
  a035=(a024*a025);
  a036=(a032*a029);
  a035=(a035-a036);
  a036=(a011*a035);
  a036=(a036*a022);
  if (res[0]!=0) res[0][31]=a036;
  a036=(a032*a025);
  a037=(a024*a029);
  a036=(a036+a037);
  a036=(a036*a022);
  a036=(-a036);
  if (res[0]!=0) res[0][32]=a036;
  a036=arg[1]? arg[1][1] : 0;
  a037=(-a036);
  if (res[0]!=0) res[0][33]=a037;
  a037=(-a036);
  if (res[0]!=0) res[0][34]=a037;
  a037=(-a036);
  if (res[0]!=0) res[0][35]=a037;
  a037=(-a036);
  if (res[0]!=0) res[0][36]=a037;
  if (res[0]!=0) res[0][37]=a023;
  a037=arg[1]? arg[1][6] : 0;
  a038=(a037*a009);
  a039=arg[1]? arg[1][7] : 0;
  a040=(a039*a011);
  a041=(a040*a029);
  a038=(a038+a041);
  a038=(a038*a022);
  if (res[0]!=0) res[0][38]=a038;
  a038=(a039*a025);
  a038=(a038*a022);
  if (res[0]!=0) res[0][39]=a038;
  a038=(a037*a022);
  a038=(-a038);
  if (res[0]!=0) res[0][40]=a038;
  if (res[0]!=0) res[0][41]=a030;
  if (res[0]!=0) res[0][42]=a000;
  if (res[0]!=0) res[0][43]=a031;
  a038=arg[1]? arg[1][5] : 0;
  a041=(a038*a009);
  a042=(a039*a011);
  a043=(a042*a025);
  a041=(a041+a043);
  a041=(a041*a022);
  a041=(-a041);
  if (res[0]!=0) res[0][44]=a041;
  a041=(a039*a029);
  a041=(a041*a022);
  if (res[0]!=0) res[0][45]=a041;
  a041=(a038*a022);
  if (res[0]!=0) res[0][46]=a041;
  if (res[0]!=0) res[0][47]=a030;
  if (res[0]!=0) res[0][48]=a000;
  if (res[0]!=0) res[0][49]=a033;
  a041=(a037*a025);
  a043=(a038*a029);
  a041=(a041-a043);
  a043=(a011*a041);
  a043=(a043*a022);
  if (res[0]!=0) res[0][50]=a043;
  a043=(a038*a025);
  a044=(a037*a029);
  a043=(a043+a044);
  a043=(a043*a022);
  a043=(-a043);
  if (res[0]!=0) res[0][51]=a043;
  a043=(-a036);
  if (res[0]!=0) res[0][52]=a043;
  a043=(-a036);
  if (res[0]!=0) res[0][53]=a043;
  a043=(-a036);
  if (res[0]!=0) res[0][54]=a043;
  a043=(-a036);
  if (res[0]!=0) res[0][55]=a043;
  if (res[0]!=0) res[0][56]=a023;
  a043=arg[1]? arg[1][9] : 0;
  a044=(a043*a009);
  a045=arg[1]? arg[1][10] : 0;
  a046=(a045*a011);
  a047=(a046*a029);
  a044=(a044+a047);
  a044=(a044*a022);
  if (res[0]!=0) res[0][57]=a044;
  a044=(a045*a025);
  a044=(a044*a022);
  if (res[0]!=0) res[0][58]=a044;
  a044=(a043*a022);
  a044=(-a044);
  if (res[0]!=0) res[0][59]=a044;
  if (res[0]!=0) res[0][60]=a030;
  if (res[0]!=0) res[0][61]=a000;
  if (res[0]!=0) res[0][62]=a031;
  a044=arg[1]? arg[1][8] : 0;
  a047=(a044*a009);
  a048=(a045*a011);
  a049=(a048*a025);
  a047=(a047+a049);
  a047=(a047*a022);
  a047=(-a047);
  if (res[0]!=0) res[0][63]=a047;
  a047=(a045*a029);
  a047=(a047*a022);
  if (res[0]!=0) res[0][64]=a047;
  a047=(a044*a022);
  if (res[0]!=0) res[0][65]=a047;
  if (res[0]!=0) res[0][66]=a030;
  if (res[0]!=0) res[0][67]=a000;
  if (res[0]!=0) res[0][68]=a033;
  a047=(a043*a025);
  a049=(a044*a029);
  a047=(a047-a049);
  a049=(a011*a047);
  a049=(a049*a022);
  if (res[0]!=0) res[0][69]=a049;
  a049=(a044*a025);
  a050=(a043*a029);
  a049=(a049+a050);
  a049=(a049*a022);
  a049=(-a049);
  if (res[0]!=0) res[0][70]=a049;
  a049=(-a036);
  if (res[0]!=0) res[0][71]=a049;
  a049=(-a036);
  if (res[0]!=0) res[0][72]=a049;
  a049=(-a036);
  if (res[0]!=0) res[0][73]=a049;
  a049=(-a036);
  if (res[0]!=0) res[0][74]=a049;
  if (res[0]!=0) res[0][75]=a023;
  a023=arg[1]? arg[1][12] : 0;
  a049=(a023*a009);
  a050=arg[1]? arg[1][13] : 0;
  a051=(a050*a011);
  a052=(a051*a029);
  a049=(a049+a052);
  a049=(a049*a022);
  if (res[0]!=0) res[0][76]=a049;
  a049=(a050*a025);
  a049=(a049*a022);
  if (res[0]!=0) res[0][77]=a049;
  a049=(a023*a022);
  a049=(-a049);
  if (res[0]!=0) res[0][78]=a049;
  if (res[0]!=0) res[0][79]=a030;
  if (res[0]!=0) res[0][80]=a000;
  if (res[0]!=0) res[0][81]=a031;
  a031=arg[1]? arg[1][11] : 0;
  a049=(a031*a009);
  a052=(a050*a011);
  a053=(a052*a025);
  a049=(a049+a053);
  a049=(a049*a022);
  a049=(-a049);
  if (res[0]!=0) res[0][82]=a049;
  a049=(a050*a029);
  a049=(a049*a022);
  if (res[0]!=0) res[0][83]=a049;
  a049=(a031*a022);
  if (res[0]!=0) res[0][84]=a049;
  if (res[0]!=0) res[0][85]=a030;
  if (res[0]!=0) res[0][86]=a000;
  if (res[0]!=0) res[0][87]=a033;
  a033=(a023*a025);
  a000=(a031*a029);
  a033=(a033-a000);
  a000=(a011*a033);
  a000=(a000*a022);
  if (res[0]!=0) res[0][88]=a000;
  a000=(a031*a025);
  a049=(a023*a029);
  a000=(a000+a049);
  a000=(a000*a022);
  a000=(-a000);
  if (res[0]!=0) res[0][89]=a000;
  a000=(-a036);
  if (res[0]!=0) res[0][90]=a000;
  a000=(-a036);
  if (res[0]!=0) res[0][91]=a000;
  a000=(-a036);
  if (res[0]!=0) res[0][92]=a000;
  a036=(-a036);
  if (res[0]!=0) res[0][93]=a036;
  if (res[0]!=0) res[0][94]=a030;
  if (res[0]!=0) res[0][95]=a030;
  if (res[0]!=0) res[0][96]=a030;
  a036=sin(a003);
  a000=arg[0]? arg[0][35] : 0;
  a049=(a022/a011);
  a053=(a009*a049);
  a054=(a000*a053);
  a054=(a036*a054);
  a003=cos(a003);
  a055=arg[0]? arg[0][34] : 0;
  a056=(a009*a049);
  a057=(a055*a056);
  a057=(a003*a057);
  a054=(a054-a057);
  a054=(a054+a030);
  if (res[0]!=0) res[0][97]=a054;
  a054=(a000*a022);
  a054=(a003*a054);
  a057=(a055*a022);
  a057=(a036*a057);
  a054=(a054+a057);
  if (res[0]!=0) res[0][98]=a054;
  a054=(a022/a011);
  a057=(a000*a054);
  a057=(a036*a057);
  a058=(a055*a054);
  a058=(a003*a058);
  a057=(a057-a058);
  if (res[0]!=0) res[0][99]=a057;
  a057=(a055*a000);
  a058=(a006*a022);
  a057=(a057*a058);
  a059=arg[0]? arg[0][33] : 0;
  a060=(a059*a000);
  a061=(a015*a022);
  a060=(a060*a061);
  a057=(a057+a060);
  a060=(a059*a055);
  a062=5.7635003033620147e-01;
  a063=(a062*a022);
  a060=(a060*a063);
  a057=(a057-a060);
  a060=casadi_sq(a055);
  a064=(a012*a022);
  a065=(a060*a064);
  a057=(a057-a065);
  a065=casadi_sq(a059);
  a066=(a012*a022);
  a067=(a065*a066);
  a057=(a057+a067);
  a067=arg[0]? arg[0][11] : 0;
  a067=(a000-a067);
  a068=(a020*a067);
  a057=(a057-a068);
  a068=arg[0]? arg[0][10] : 0;
  a068=(a055-a068);
  a069=(a015*a068);
  a057=(a057+a069);
  a069=arg[0]? arg[0][9] : 0;
  a069=(a059-a069);
  a070=(a006*a069);
  a057=(a057-a070);
  a057=(a003*a057);
  a070=(a059*a055);
  a071=(a015*a022);
  a070=(a070*a071);
  a072=(a055*a000);
  a073=(a012*a022);
  a072=(a072*a073);
  a074=(a059*a000);
  a075=6.7742908748095276e-01;
  a076=(a075*a022);
  a074=(a074*a076);
  a072=(a072+a074);
  a070=(a070-a072);
  a072=casadi_sq(a000);
  a074=(a006*a022);
  a077=(a072*a074);
  a070=(a070+a077);
  a077=(a017*a022);
  a078=(a065*a077);
  a070=(a070+a078);
  a018=(a018*a067);
  a070=(a070+a018);
  a018=(a013*a068);
  a070=(a070+a018);
  a018=(a002*a069);
  a070=(a070+a018);
  a070=(a036*a070);
  a057=(a057-a070);
  if (res[0]!=0) res[0][100]=a057;
  a057=(a059*a055);
  a070=(a057*a011);
  a018=(a015*a022);
  a070=(a070*a018);
  a078=(a055*a000);
  a079=(a078*a011);
  a080=(a012*a022);
  a079=(a079*a080);
  a081=(a059*a000);
  a082=(a081*a011);
  a075=(a075*a022);
  a082=(a082*a075);
  a079=(a079+a082);
  a070=(a070-a079);
  a079=(a006*a022);
  a082=(a072*a079);
  a083=(a011*a082);
  a070=(a070+a083);
  a083=(a006*a022);
  a084=(a065*a083);
  a085=(a011*a084);
  a070=(a070-a085);
  a085=(a015*a067);
  a086=(a011*a085);
  a070=(a070-a086);
  a086=(a013*a068);
  a087=(a011*a086);
  a070=(a070+a087);
  a087=(a012*a069);
  a088=(a011*a087);
  a070=(a070-a088);
  a003=(a003*a070);
  a070=(a059*a055);
  a062=(a062*a022);
  a088=(a011*a062);
  a089=(a070*a088);
  a090=(a055*a000);
  a091=(a006*a022);
  a092=(a011*a091);
  a093=(a090*a092);
  a094=(a059*a000);
  a095=(a015*a022);
  a096=(a011*a095);
  a097=(a094*a096);
  a093=(a093+a097);
  a089=(a089-a093);
  a093=(a012*a022);
  a097=(a060*a093);
  a098=(a011*a097);
  a089=(a089+a098);
  a098=(a012*a022);
  a065=(a065*a098);
  a099=(a011*a065);
  a089=(a089-a099);
  a099=(a020*a067);
  a100=(a011*a099);
  a089=(a089+a100);
  a100=(a015*a068);
  a101=(a011*a100);
  a089=(a089-a101);
  a101=(a006*a069);
  a102=(a011*a101);
  a089=(a089+a102);
  a036=(a036*a089);
  a003=(a003-a036);
  if (res[0]!=0) res[0][101]=a003;
  a003=cos(a008);
  a036=(a055*a007);
  a089=(a036*a049);
  a102=(a000*a004);
  a103=(a102*a049);
  a089=(a089+a103);
  a089=(a003*a089);
  a008=sin(a008);
  a103=(a059*a011);
  a102=(a102*a009);
  a103=(a103+a102);
  a036=(a036*a009);
  a103=(a103+a036);
  a103=(a103/a011);
  a103=(a103/a011);
  a103=(a103*a022);
  a049=(a059*a049);
  a103=(a103-a049);
  a103=(a008*a103);
  a089=(a089+a103);
  a089=(-a089);
  if (res[0]!=0) res[0][102]=a089;
  if (res[0]!=0) res[0][103]=a030;
  a089=(a000*a004);
  a103=(a055*a007);
  a089=(a089+a103);
  a089=(a089/a011);
  a089=(a089/a011);
  a089=(a089*a022);
  a089=(a008*a089);
  a089=(-a089);
  if (res[0]!=0) res[0][104]=a089;
  a089=arg[0]? arg[0][21] : 0;
  a103=(a089*a022);
  a049=(a023*a103);
  a036=arg[0]? arg[0][22] : 0;
  a102=(a036*a022);
  a104=(a031*a102);
  a049=(a049-a104);
  a104=arg[0]? arg[0][19] : 0;
  a105=(a104*a022);
  a106=(a044*a105);
  a049=(a049-a106);
  a106=arg[0]? arg[0][18] : 0;
  a107=(a106*a022);
  a108=(a043*a107);
  a049=(a049+a108);
  a108=arg[0]? arg[0][16] : 0;
  a109=(a108*a022);
  a110=(a038*a109);
  a049=(a049-a110);
  a110=arg[0]? arg[0][15] : 0;
  a111=(a110*a022);
  a112=(a037*a111);
  a049=(a049+a112);
  a112=arg[0]? arg[0][12] : 0;
  a113=(a112*a022);
  a114=(a024*a113);
  a049=(a049+a114);
  a114=arg[0]? arg[0][13] : 0;
  a115=(a114*a022);
  a116=(a032*a115);
  a049=(a049-a116);
  a049=(a003*a049);
  a116=arg[0]? arg[0][23] : 0;
  a117=(a116*a022);
  a033=(a033*a117);
  a118=(a025*a102);
  a118=(a050*a118);
  a033=(a033-a118);
  a118=(a029*a103);
  a118=(a050*a118);
  a033=(a033+a118);
  a118=arg[0]? arg[0][20] : 0;
  a119=(a118*a022);
  a047=(a047*a119);
  a033=(a033+a047);
  a047=(a025*a105);
  a047=(a045*a047);
  a033=(a033-a047);
  a047=(a029*a107);
  a047=(a045*a047);
  a033=(a033+a047);
  a047=arg[0]? arg[0][17] : 0;
  a120=(a047*a022);
  a041=(a041*a120);
  a033=(a033+a041);
  a041=(a025*a109);
  a041=(a039*a041);
  a033=(a033-a041);
  a041=(a029*a111);
  a041=(a039*a041);
  a033=(a033+a041);
  a041=arg[0]? arg[0][14] : 0;
  a121=(a041*a022);
  a035=(a035*a121);
  a033=(a033+a035);
  a029=(a029*a113);
  a029=(a026*a029);
  a033=(a033+a029);
  a025=(a025*a115);
  a025=(a026*a025);
  a033=(a033-a025);
  a033=(a008*a033);
  a049=(a049-a033);
  if (res[0]!=0) res[0][105]=a049;
  a049=(a055*a000);
  a033=-1.0107905714475129e-01;
  a033=(a033*a022);
  a049=(a049*a033);
  a025=(a059*a000);
  a029=(a012*a022);
  a025=(a025*a029);
  a049=(a049-a025);
  a025=(a059*a055);
  a035=(a006*a022);
  a025=(a025*a035);
  a049=(a049-a025);
  a025=(a015*a022);
  a072=(a072*a025);
  a049=(a049-a072);
  a072=(a015*a022);
  a060=(a060*a072);
  a049=(a049+a060);
  a017=(a017*a067);
  a049=(a049+a017);
  a068=(a012*a068);
  a049=(a049+a068);
  a001=(a001*a069);
  a049=(a049+a001);
  a003=(a003*a049);
  a018=(a007*a018);
  a057=(a057*a018);
  a080=(a007*a080);
  a078=(a078*a080);
  a075=(a007*a075);
  a081=(a081*a075);
  a078=(a078+a081);
  a057=(a057-a078);
  a090=(a090*a004);
  a090=(a090*a091);
  a057=(a057-a090);
  a094=(a094*a004);
  a094=(a094*a095);
  a057=(a057-a094);
  a070=(a070*a004);
  a070=(a070*a062);
  a057=(a057+a070);
  a082=(a007*a082);
  a057=(a057+a082);
  a084=(a007*a084);
  a057=(a057-a084);
  a097=(a004*a097);
  a057=(a057+a097);
  a065=(a004*a065);
  a057=(a057-a065);
  a085=(a007*a085);
  a057=(a057-a085);
  a099=(a004*a099);
  a057=(a057+a099);
  a086=(a007*a086);
  a057=(a057+a086);
  a100=(a004*a100);
  a057=(a057-a100);
  a087=(a007*a087);
  a057=(a057-a087);
  a101=(a004*a101);
  a057=(a057+a101);
  a008=(a008*a057);
  a003=(a003-a008);
  if (res[0]!=0) res[0][106]=a003;
  if (res[0]!=0) res[0][107]=a030;
  a030=cos(a028);
  a051=(a051*a103);
  a117=(a011*a117);
  a103=(a031*a117);
  a051=(a051-a103);
  a119=(a011*a119);
  a103=(a044*a119);
  a051=(a051-a103);
  a046=(a046*a107);
  a051=(a051+a046);
  a120=(a011*a120);
  a046=(a038*a120);
  a051=(a051-a046);
  a040=(a040*a111);
  a051=(a051+a040);
  a121=(a011*a121);
  a040=(a032*a121);
  a051=(a051-a040);
  a027=(a027*a113);
  a051=(a051+a027);
  a051=(a030*a051);
  a028=sin(a028);
  a117=(a023*a117);
  a052=(a052*a102);
  a117=(a117-a052);
  a119=(a043*a119);
  a117=(a117+a119);
  a048=(a048*a105);
  a117=(a117-a048);
  a120=(a037*a120);
  a117=(a117+a120);
  a042=(a042*a109);
  a117=(a117-a042);
  a121=(a024*a121);
  a117=(a117+a121);
  a034=(a034*a115);
  a117=(a117-a034);
  a117=(a028*a117);
  a051=(a051-a117);
  if (res[0]!=0) res[0][108]=a051;
  a036=(a036*a022);
  a036=(a050*a036);
  a116=(a116*a022);
  a023=(a023*a116);
  a036=(a036-a023);
  a118=(a118*a022);
  a043=(a043*a118);
  a036=(a036-a043);
  a104=(a104*a022);
  a104=(a045*a104);
  a036=(a036+a104);
  a047=(a047*a022);
  a037=(a037*a047);
  a036=(a036-a037);
  a108=(a108*a022);
  a108=(a039*a108);
  a036=(a036+a108);
  a114=(a114*a022);
  a114=(a026*a114);
  a036=(a036+a114);
  a041=(a041*a022);
  a024=(a024*a041);
  a036=(a036-a024);
  a030=(a030*a036);
  a089=(a089*a022);
  a050=(a050*a089);
  a031=(a031*a116);
  a050=(a050-a031);
  a044=(a044*a118);
  a050=(a050-a044);
  a106=(a106*a022);
  a045=(a045*a106);
  a050=(a050+a045);
  a038=(a038*a047);
  a050=(a050-a038);
  a110=(a110*a022);
  a039=(a039*a110);
  a050=(a050+a039);
  a112=(a112*a022);
  a026=(a026*a112);
  a050=(a050+a026);
  a032=(a032*a041);
  a050=(a050-a032);
  a028=(a028*a050);
  a030=(a030-a028);
  if (res[0]!=0) res[0][109]=a030;
  a030=(-a022);
  if (res[0]!=0) res[0][110]=a030;
  a030=2.3495999999999999e+01;
  if (res[0]!=0) res[0][111]=a030;
  a028=(-a022);
  if (res[0]!=0) res[0][112]=a028;
  if (res[0]!=0) res[0][113]=a030;
  a028=(-a022);
  if (res[0]!=0) res[0][114]=a028;
  if (res[0]!=0) res[0][115]=a030;
  a030=(-a022);
  if (res[0]!=0) res[0][116]=a030;
  a030=(a000*a022);
  a028=(a012*a030);
  a050=(a055*a022);
  a032=(a006*a050);
  a028=(a028+a032);
  a032=1.2281431176632859e-01;
  a028=(a028+a032);
  if (res[0]!=0) res[0][117]=a028;
  a061=(a007*a061);
  a028=(a000*a061);
  a063=(a007*a063);
  a032=(a055*a063);
  a028=(a028-a032);
  a076=(a004*a076);
  a032=(a000*a076);
  a028=(a028-a032);
  a071=(a004*a071);
  a032=(a055*a071);
  a028=(a028+a032);
  a032=(a059+a059);
  a066=(a007*a066);
  a077=(a004*a077);
  a066=(a066+a077);
  a066=(a032*a066);
  a028=(a028+a066);
  a028=(a028+a005);
  if (res[0]!=0) res[0][118]=a028;
  a018=(a011*a018);
  a028=(a055*a018);
  a075=(a011*a075);
  a005=(a000*a075);
  a028=(a028-a005);
  a096=(a004*a096);
  a005=(a000*a096);
  a028=(a028-a005);
  a088=(a004*a088);
  a005=(a055*a088);
  a028=(a028+a005);
  a029=(a009*a029);
  a005=(a000*a029);
  a028=(a028-a005);
  a035=(a009*a035);
  a005=(a055*a035);
  a028=(a028-a005);
  a005=(a011*a007);
  a005=(a005*a083);
  a083=(a004*a011);
  a083=(a083*a098);
  a005=(a005+a083);
  a032=(a032*a005);
  a028=(a028-a032);
  a028=(a028+a010);
  if (res[0]!=0) res[0][119]=a028;
  a056=(a007*a056);
  a056=(-a056);
  if (res[0]!=0) res[0][120]=a056;
  a056=(a004*a022);
  a056=(-a056);
  if (res[0]!=0) res[0][121]=a056;
  a056=(a007*a054);
  a056=(-a056);
  if (res[0]!=0) res[0][122]=a056;
  a056=(a006*a059);
  a028=(a015*a055);
  a056=(a056-a028);
  a028=(a020*a000);
  a056=(a056+a028);
  a056=(a056*a022);
  a028=(a013*a030);
  a056=(a056-a028);
  a028=(a015*a050);
  a056=(a056-a028);
  a056=(a056+a002);
  if (res[0]!=0) res[0][123]=a056;
  a058=(a007*a058);
  a056=(a000*a058);
  a063=(a059*a063);
  a056=(a056-a063);
  a073=(a004*a073);
  a063=(a000*a073);
  a056=(a056-a063);
  a071=(a059*a071);
  a056=(a056+a071);
  a071=(a055+a055);
  a064=(a007*a064);
  a064=(a071*a064);
  a056=(a056-a064);
  a056=(a056+a014);
  if (res[0]!=0) res[0][124]=a056;
  a018=(a059*a018);
  a080=(a011*a080);
  a056=(a000*a080);
  a018=(a018-a056);
  a092=(a004*a092);
  a056=(a000*a092);
  a018=(a018-a056);
  a088=(a059*a088);
  a018=(a018+a088);
  a033=(a009*a033);
  a088=(a000*a033);
  a018=(a018+a088);
  a035=(a059*a035);
  a018=(a018-a035);
  a035=(a004*a011);
  a035=(a035*a093);
  a072=(a009*a072);
  a035=(a035+a072);
  a071=(a071*a035);
  a018=(a018+a071);
  a018=(a018+a016);
  if (res[0]!=0) res[0][125]=a018;
  a053=(a004*a053);
  a053=(-a053);
  if (res[0]!=0) res[0][126]=a053;
  a053=(a007*a022);
  if (res[0]!=0) res[0][127]=a053;
  a054=(a004*a054);
  a054=(-a054);
  if (res[0]!=0) res[0][128]=a054;
  a012=(a012*a059);
  a013=(a013*a055);
  a012=(a012-a013);
  a013=(a015*a000);
  a012=(a012+a013);
  a012=(a012*a022);
  a015=(a015*a030);
  a012=(a012+a015);
  a020=(a020*a050);
  a012=(a012+a020);
  a012=(a012+a006);
  if (res[0]!=0) res[0][129]=a012;
  a058=(a055*a058);
  a061=(a059*a061);
  a058=(a058+a061);
  a073=(a055*a073);
  a058=(a058-a073);
  a076=(a059*a076);
  a058=(a058-a076);
  a000=(a000+a000);
  a004=(a004*a074);
  a004=(a000*a004);
  a058=(a058+a004);
  a058=(a058+a019);
  if (res[0]!=0) res[0][130]=a058;
  a033=(a055*a033);
  a080=(a055*a080);
  a075=(a059*a075);
  a080=(a080+a075);
  a055=(a055*a092);
  a080=(a080+a055);
  a096=(a059*a096);
  a080=(a080+a096);
  a033=(a033-a080);
  a059=(a059*a029);
  a033=(a033-a059);
  a011=(a011*a007);
  a011=(a011*a079);
  a009=(a009*a025);
  a011=(a011-a009);
  a000=(a000*a011);
  a033=(a033+a000);
  a033=(a033+a021);
  if (res[0]!=0) res[0][131]=a033;
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_jamal(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem){
  return casadi_f0(arg, res, iw, w, mem);
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_jamal_alloc_mem(void) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_jamal_init_mem(int mem) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT void eval_jac_g_jamal_free_mem(int mem) {
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_jamal_checkout(void) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT void eval_jac_g_jamal_release(int mem) {
}

extern "C" CASADI_SYMBOL_EXPORT void eval_jac_g_jamal_incref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT void eval_jac_g_jamal_decref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT casadi_int eval_jac_g_jamal_n_in(void) { return 2;}

extern "C" CASADI_SYMBOL_EXPORT casadi_int eval_jac_g_jamal_n_out(void) { return 1;}

extern "C" CASADI_SYMBOL_EXPORT casadi_real eval_jac_g_jamal_default_in(casadi_int i) {
  switch (i) {
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const char* eval_jac_g_jamal_name_in(casadi_int i) {
  switch (i) {
    case 0: return "w";
    case 1: return "p";
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const char* eval_jac_g_jamal_name_out(casadi_int i) {
  switch (i) {
    case 0: return "jac_g";
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* eval_jac_g_jamal_sparsity_in(casadi_int i) {
  switch (i) {
    case 0: return casadi_s0;
    case 1: return casadi_s1;
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* eval_jac_g_jamal_sparsity_out(casadi_int i) {
  switch (i) {
    case 0: return casadi_s2;
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_jamal_work(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w) {
  if (sz_arg) *sz_arg = 2;
  if (sz_res) *sz_res = 1;
  if (sz_iw) *sz_iw = 0;
  if (sz_w) *sz_w = 0;
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_jamal_work_bytes(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w) {
  if (sz_arg) *sz_arg = 2*sizeof(const casadi_real*);
  if (sz_res) *sz_res = 1*sizeof(casadi_real*);
  if (sz_iw) *sz_iw = 0*sizeof(casadi_int);
  if (sz_w) *sz_w = 0*sizeof(casadi_real);
  return 0;
}


